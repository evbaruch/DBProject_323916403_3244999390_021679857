/*
  Function Name: get_recent_transactions
  Purpose:
    This function retrieves recent transactions for a given account within a specified number of days.
  Parameters:
    p_account_id (IN NUMBER) - The ID of the account for which recent transactions are to be retrieved.
    p_days (IN NUMBER) - The number of past days to consider for retrieving transactions.
  Returns:
    SYS_REFCURSOR - A cursor containing the transaction details (TransactionID, TransactionType, Amount, TransactionDate).
  Usage:
    This function can be called by passing an account ID and the number of days to retrieve recent transactions.
  Features Used:
    a. Ref Cursor - Used to return the result set of recent transactions.
    b. Exception Handling - Used to catch and log any errors that occur during the execution of the function.
  Notes:
    - This function performs a SELECT operation on the Transactions table.
    - Proper exception handling ensures that errors are logged and handled gracefully.
    - The function assumes that the structure of the Transactions table is known and correct.
*/

CREATE OR REPLACE FUNCTION get_recent_transactions(p_account_id IN NUMBER, p_days IN NUMBER) 
RETURN SYS_REFCURSOR 
IS 
    -- Variable to store the ref cursor for the result set of recent transactions
    v_transactions SYS_REFCURSOR;
BEGIN
    -- Open the ref cursor for the SELECT statement to fetch recent transactions
    OPEN v_transactions FOR
        SELECT TransactionID, TransactionType, Amount, TransactionDate
        FROM Transactions
        WHERE AccountID = p_account_id
          AND TransactionDate >= SYSDATE - p_days
        ORDER BY TransactionDate DESC;
    
    -- Return the ref cursor containing the recent transactions
    RETURN v_transactions;
EXCEPTION
    -- Handle any exceptions that occur
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error in get_recent_transactions: ' || SQLERRM);
        RETURN NULL;
END;
/
