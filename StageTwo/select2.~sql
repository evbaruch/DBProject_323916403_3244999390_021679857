/*
Documentation for SQL Query

Purpose:
---------
To generate a comprehensive report of customer transactions over the past 24 months. This report is essential for analyzing long-term transaction trends, understanding customer behavior, and providing insights into account activities over the last two years.

Context and Story:
-------------------
As a data analyst at a bank, your task is to provide management with detailed insights into customer transaction patterns over the past two years. The bank aims to understand long-term trends in customer behavior, identify significant changes in transaction activity, and monitor account usage. This information supports strategic decisions for customer engagement, risk management, and service improvements. By reviewing transactions over the past 24 months, the bank can gain a holistic view of customer financial interactions.

Explanation:
-------------
This query retrieves transaction details for each customer for the past 24 months. Here’s how it works:

1. SELECT Clause:
   - `c.FirstName, c.LastName`: Retrieves the first and last names of the customers associated with each transaction.
   - `t.TransactionDate`: Retrieves the date on which each transaction occurred.
   - `t.TransactionType`: Retrieves the type of each transaction (e.g., deposit, withdrawal).
   - `t.Amount`: Retrieves the amount involved in each transaction.

2. FROM Clause:
   - The query starts with the `Transactions` table (`t`), which holds records of all transactions.
   - `JOIN Account a ON t.AccountID = a.AccountID`: Joins the `Account` table to link each transaction to its respective account.
   - `JOIN Rel5 r ON a.AccountID = r.AccountID`: Joins the `Rel5` table to connect each account to its customer via `AccountID`.
   - `JOIN Customer c ON r.CustomerID = c.CustomerID`: Joins the `Customer` table to get customer details using the `CustomerID` from the `Rel5` table.

3. WHERE Clause:
   - `t.TransactionDate BETWEEN ADD_MONTHS(SYSDATE, -24) AND SYSDATE`: Filters the transactions to include only those that occurred within the last 24 months.
     - `ADD_MONTHS(SYSDATE, -24)`: Computes the date 24 months ago from the current date (`SYSDATE`).
     - `SYSDATE`: Represents the current date and time.

4. ORDER BY Clause:
   - `ORDER BY c.LastName, c.FirstName, t.TransactionDate DESC`: Sorts the results by customers' last names, then first names, and finally by transaction date in descending order. This ordering ensures that transactions are listed from most recent to oldest for each customer, and customers are sorted alphabetically by name.

By using this query, the bank can effectively analyze customer transactions over the past two years, providing a basis for strategic planning, customer relationship management, and understanding long-term customer engagement patterns.
*/

SELECT 
    c.FirstName,
    c.LastName,
    t.TransactionDate,
    t.TransactionType,
    t.Amount
FROM 
    Transactions t
JOIN 
    Account a ON t.AccountID = a.AccountID
JOIN 
    Rel5 r ON a.AccountID = r.AccountID
JOIN 
    Customer c ON r.CustomerID = c.CustomerID
WHERE 
    t.TransactionDate BETWEEN ADD_MONTHS(SYSDATE, -24) AND SYSDATE
ORDER BY 
    c.LastName, c.FirstName, t.TransactionDate DESC;
